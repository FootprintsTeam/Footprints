@model Footprints.ViewModels.DestinationWidgetViewModel
@using Footprints.Common

<div class="widget gridalicious-item not-responsive">
    <!-- Info -->
    <div class="bg-primary">
        <div class="media">
            <a href="@Url.Action("Index", "Personal", new { @Model.UserID})" class="pull-left"><img src="@Model.ProfilePicURL" style="width:50px !important" class="media-object"></a>
            <div class="media-body innerTB half">
                <a href="#" class="pull-right innerT innerR text-white">
                    <i class="icon-reply-all-fill fa fa-2x "></i>
                </a>
                <a href="@Url.Action("Index", "Personal", new { @Model.UserID})" class="text-white strong display-block">@Model.UserName</a>
                <span>Checked in at <a href="" class="text-white strong">@Model.DestinationName</a> on @Model.Timestamp.ToStringShort()</span>
            </div>
        </div>
    </div>

    <!-- Content -->
    <div class="innerAll">
        <div class="row">
            <div class="col-md-6">
                <div class="map_canvas" style="height: 180px">
                    <img id="google-map-json" src="@Model.Place.ConstructMapImageUrl(170,180)" style="width:100%;" />
                </div>
            </div>
            <div class="col-md-6">
                <div class="strong text-inverse innerB half">
                    <a href="@Url.Action("Index", "Destination", new {destinationID = Model.DestinationID})" class="strong">@Model.Place.Name</a>
                </div>
                <div class="media margin-none">                                        
                    <p class="margin-none innerTB half">@Model.Description.TruncateLongString(100)</p>
                    <a href="@Url.Action("Index", "Destination", new {destinationID = Model.DestinationID})" class="btn btn-xs btn-inverse">View</a>                    
                </div>
            </div>
        </div>
    </div>
    <!-- //Content -->
    @{
        var uniqueid = Guid.NewGuid();
    }
    <a href="#comments-collapse-@uniqueid" class="innerAll border-top display-block " data-toggle="collapse"><i class="innerLR fa fa-bars"></i> View all comments <span class="text-muted">@Model.Comments.Count comments</span></a>

    <div class="collapse" id="comments-collapse-@uniqueid">
        @{Html.RenderPartial("NewsfeedWidgetCommentSection", Model.Comments);}
    </div>
    <!--  Comment -->
    <div style="display: none" id="empty-last-comment-@Model.DestinationID"></div>
    <div class="" id="@String.Format("section-form-{0}", Model.DestinationID.ToString())">
        @{
            var jaxOptions = new AjaxOptions()
            {
                HttpMethod = "POST",
                OnBegin = "return validateAddCommentForm('" + @Model.DestinationID + "');",
                OnSuccess = "addCommentDestination",
                OnComplete = "addCommentComplete"
            };
        }
        @using (Ajax.BeginForm("Comment", new { controller = "Destination" }, jaxOptions, new { id = "add-comment-form-" + Model.DestinationID.ToString() }))
        {
            @Html.AntiForgeryToken()
            @Html.Hidden("DestinationID", Model.DestinationID)
            <div class="input-group comment">
                @Html.TextBox("Content", null, new { id = "comment-input-" + @Model.DestinationID + "", @class = "form-control", placeholder = "Comment here ..." })
                <div class="input-group-btn">
                    <button class="btn btn-primary" type="submit"><i class="fa fa-comment"></i></button>
                </div>
            </div>
        }
    </div>
</div>
