@model IList<Footprints.ViewModels.NewsfeedBaseWidgetViewModel>
@using Footprints.Common
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- <div class="layout-app">  -->
<div class="innerAll" style="margin-top:60px">
    <div class=" row">
        <div class="col-lg-12 col-md-12 col-lg-offset-0 col-md-offset-0">
            <div class="gridalicious-row" data-toggle="gridalicious" data-gridalicious-width="340" data-gridalicious-gutter="12" data-gridalicious-selector=".gridalicious-item">
                <div class="loaded hide2">
                    <!-- Personal Widget -->
                    @{Html.RenderAction("PersonalWidget");}
                    @*End Widget*@
                    <!-- Widget -->
                    @foreach (var activity in Model)
                    {

                        switch (activity.Type)
                        {
                            case Constant.ActivityAddNewContent:
                                Html.RenderPartial("WidePictureWidget", activity);
                                break;

                            case Constant.ActivityAddNewDestination:
                                Html.RenderPartial("DestinationWidget",activity);
                                break;

                            case Constant.ActivityAddNewFriend:
                                Html.RenderPartial("AddFriendWidget", activity);
                                break;

                            case Constant.ActivityAddnewJourney:
                                Html.RenderPartial("JourneyWidget", activity);
                                break;

                            case Constant.ActivityComment:
                                Html.RenderPartial("CommentWidget",activity);
                                break;

                            case Constant.ActivityLikeDestination:                                
                                break;

                            case Constant.ActivityShareDestination:
                                Html.RenderPartial("ShareWidget", activity);
                                break;

                            default:
                                System.Diagnostics.Debug.WriteLine(activity.Type + "something");
                                break;
                        }
                    };
                    <!-- //End Widget -->
                </div>
                <div class="innerAll inner-2x loading text-center text-medium" id="loadingDiv"><i class="fa fa-fw fa-spinner fa-spin"></i> Loading</div>
            </div>
        </div>
    </div>
</div>
@section scripts{
    <script type="text/javascript"
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCENqxOk_1aIxTllx-AMHYsaCRdoNQ8fJU">
    </script>
    <script type="text/javascript">
        var BlockNumber = 2;  //Infinate Scroll starts from second block
        var NoMoreData = false;
        var inProgress = false;

        $(window).scroll(function () {
            if ($(window).scrollTop() == $(document).height() -
            $(window).height() && !NoMoreData && !inProgress) {

                inProgress = true;
                $("#loadingDiv").show();

                $.post("@Url.Action("InfiniteScroll",
            "Newsfeed")", { "BlockNumber": BlockNumber },
                        function (data) {
                            BlockNumber = BlockNumber + 1;
                            NoMoreData = data.NoMoreData;
                            for (i = 0; i < data.length; i++) {
                                $(".gridalicious-row").gridalicious('append', $.parseHTML(data[i].HTMLString));
                            }
                            $("#loadingDiv").hide();
                            inProgress = false;
                        });
            }
        });
        var isCommentProcessing = false;
        function addCommentDestination(data) {
            console.log('addCommentDestination');
            $('#empty-last-comment-' + data.DestinationID).before(
                data.HTMLString
            );
            $('#comment-input-@ViewBag.DestinationID').val('');
        }
        function validateAddCommentForm(DestinationID) {
            console.log('validateAddCommentForm');
            if (isCommentProcessing) return false;
            isCommentProcessing = true;
            var commentInput = $('#comment-input-' + DestinationID);
            if (commentInput == null) {
                return false;
            } else {
                return commentInput.val() == null;
            }
        }
        function addCommentComplete() {
            console.log('addCommentComplete');
            isCommentProcessing = false;
        }
        $('[id^="comment-input-"]').keydown(function (e) {
            if (e.which == 13) {
                console.log('enter');
                if ($(this).val() != '') {
                    $(this).parents('form').submit();
                } else {
                    e.preventDefault();
                }
            }
        });
    </script>
}